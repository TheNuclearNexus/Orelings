predicate ./moving [
  {
    "condition": "minecraft:inverted",
    "term": {
      "condition": "minecraft:entity_properties",
      "entity": "this",
      "predicate": {
        "nbt": "{Motion:[0.0d,-0.0784000015258789d,0.0d]}"
      }
    }
  },
  {
    "condition": "minecraft:inverted",
    "term": {
      "condition": "minecraft:entity_properties",
      "entity": "this",
      "predicate": {
        "nbt": "{Motion:[0.0d,0.0d,0.0d]}"
      }
    }
  }
]

function ~/common/spawn:
    scoreboard players set @s resourcelings.happiness 50
    scoreboard players set @s resourcelings.hunger 50
    scoreboard players set @s resourcelings.thirst 50

FOOD = {
    "minecraft:apple":           2,
    "minecraft:golden_apple":    4,
    "minecraft:carrot":          1,
    "minecraft:golden_carrot":   3,
    "minecraft:potato":          1,
    "minecraft:baked_potato":    2,
    "minecraft:dried_kelp":      1,
    "minecraft:cooked_beef":     2,
    "minecraft:cooked_porkchop": 2,
    "minecraft:cooked_mutton":   2,
    "minecraft:cooked_chicken":  2,
    "minecraft:cooked_rabbit":   3,
    "minecraft:cooked_cod":      3,
    "minecraft:cooked_salmon":   3,
    "minecraft:bread":           2,
    "minecraft:pumpkin_pie":     3,
    "minecraft:rotten_flesh":    2,
    "minecraft:cobblestone":     1,
    "minecraft:stone":           1,
    "minecraft:cake":            4
}
append function_tag ../food {"values": FOOD}

memo (''.join(FOOD.keys())):
    for id in FOOD:
        function ~/common/food_value/{id.split(":")[1]}:
            scoreboard players set #foodValue resourcelings.dummy FOOD[id]

function ~/common/feed:
    if score @s resourcelings.feed_cooldown matches 1.. return run function ~/fail:
        playsound minecraft:entity.villager.no neutral @a ~ ~ ~ 1 2
        execute return 0

    playsound entity.generic.eat neutral @a 
    $execute rotated ~ 0 run particle item $(used) ^ ^0.25 ^0.25 0.1 0.1 0.1 0 5 

    $execute unless data storage resourcelings:temp food{used: "$(favorite)"} run function resourcelings:entity/lings/common/food_value/$(used_id)
    $execute if data storage resourcelings:temp food{used: "$(favorite)"} run function resourcelings:entity/lings/common/feed/favorite
    function ~/favorite:
        scoreboard players set #foodValue resourcelings.dummy 7
        scoreboard players add @s resourcelings.happiness 2
        particle happy_villager ~ ~0.5 ~ 0.1 0.1 0.1 0 10

    scoreboard players operation @s resourcelings.hunger += #foodValue resourcelings.dummy

    if score @s resourcelings.hunger matches 100..:
        scoreboard players set @s resourcelings.hunger 100

    scoreboard players set @s resourcelings.feed_cooldown 30

    execute return 1

function ~/tick:
    item replace entity @s weapon.mainhand from entity @s armor.head
    data modify entity @s[predicate=!resourcelings:entity/moving] HandItems[0].tag.CustomModelData set from entity @s ArmorItems[3].tag.resourcelings.models.idle
    data modify entity @s[predicate=resourcelings:entity/moving] HandItems[0].tag.CustomModelData set from entity @s ArmorItems[3].tag.resourcelings.models.walk

    if entity @s[nbt={HurtTime: 10s}] if predicate ../chance/lose_happiness_on_hit function ./on_hit:
        scoreboard players remove @s resourcelings.happiness 10
        particle angry_villager ~ ~0.5 ~ 0 0 0 0 1
    
predicate ../chance/lose_happiness_on_hit {
    "condition": "minecraft:random_chance",
    "chance": 0.3
}

predicate ../chance/lose_hunger {
    "condition": "minecraft:random_chance",
    "chance": 0.02
}

predicate ../chance/check_happiness {
    "condition": "minecraft:random_chance",
    "chance": 0.05  
}


function ~/second_clock:
    data modify entity @s HandItems[0].tag.fix_milk_bucket set value "ty mag"

    scoreboard players remove @s[scores={resourcelings.feed_cooldown=1..}] resourcelings.feed_cooldown 1

    unless entity @p[distance=..32] return 0

    if predicate ../chance/lose_hunger function ./lose_hunger:
        scoreboard players remove @s resourcelings.hunger 3

        if score @s resourcelings.hunger matches ..30 function ~/unhappy:
            function ./emote/hungry/spawn
            scoreboard players remove @s resourcelings.happiness 4

    if score @s resourcelings.hunger matches ..10:
        scoreboard players remove @s resourcelings.happiness 2

    data modify storage resourcelings:temp social set from entity @s ArmorItems[3].tag.resourcelings.social
    if predicate ../chance/check_happiness function ./check_happiness with storage resourcelings:temp social:
        scoreboard players operation #inital_happiness resourcelings.dummy = @s resourcelings.happiness
        
        store result score #num_resourcelings resourcelings.dummy if entity @e[type=wandering_trader,tag=resourcelings.entity,distance=0.001..8]
        $execute store result score #num_liked resourcelings.dummy if entity @e[type=wandering_trader,tag=resourcelings.entity,predicate=$(likes),distance=0.001..8]
        $execute store result score #num_disliked resourcelings.dummy if entity @e[type=wandering_trader,tag=resourcelings.entity,predicate=$(dislikes),distance=0.001..8]

        scoreboard players operation @s resourcelings.happiness += #num_liked resourcelings.dummy
        scoreboard players operation @s resourcelings.happiness -= #num_disliked resourcelings.dummy


        if score #num_resourcelings resourcelings.dummy matches 0:
            scoreboard players remove @s resourcelings.happiness 1

        if score #num_resourcelings resourcelings.dummy matches 1:
            scoreboard players add @s resourcelings.happiness 2

        if score #num_resourcelings resourcelings.dummy matches 2..6:
            scoreboard players add @s resourcelings.happiness 4
        
        if score #num_resourcelings resourcelings.dummy matches 7..9:
            scoreboard players remove @s resourcelings.happiness 3

        if score #num_resourcelings resourcelings.dummy matches 10..:
            scoreboard players remove @s resourcelings.happiness 5


        if score @s resourcelings.happiness < #inital_happiness resourcelings.dummy:
            function ./emote/sad/spawn
        if score @s resourcelings.happiness > #inital_happiness resourcelings.dummy:
            unless score #inital_happiness resourcelings.dummy matches 100:
                function ./emote/happy/spawn

    if score @s resourcelings.happiness matches 101..:
        scoreboard players set @s resourcelings.happiness 100

    if score @s resourcelings.hunger matches ..0 function ./death/hunger:
        kill @s

    if score @s resourcelings.happiness matches ..0 function ./death/happiness:
        kill @s

    if score @s resourcelings.thirst matches ..0 function ./death/thirst:
        kill @s