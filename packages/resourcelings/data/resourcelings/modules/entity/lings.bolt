predicate ./moving [
  {
    "condition": "minecraft:inverted",
    "term": {
      "condition": "minecraft:entity_properties",
      "entity": "this",
      "predicate": {
        "nbt": "{Motion:[0.0d,-0.0784000015258789d,0.0d]}"
      }
    }
  },
  {
    "condition": "minecraft:inverted",
    "term": {
      "condition": "minecraft:entity_properties",
      "entity": "this",
      "predicate": {
        "nbt": "{Motion:[0.0d,0.0d,0.0d]}"
      }
    }
  }
]

function ~/common/spawn:
    scoreboard players set @s resourcelings.happiness 50
    scoreboard players set @s resourcelings.hunger 50
    scoreboard players set @s resourcelings.thirst 50

    tag @s remove resourcelings.tag

FOOD = {
    "minecraft:apple":            2,
    "minecraft:golden_apple":     4,
    "minecraft:carrot":           1,
    "minecraft:golden_carrot":    3,
    "minecraft:potato":           1,
    "minecraft:baked_potato":     2,
    "minecraft:dried_kelp":       1,
    "minecraft:cooked_beef":      2,
    "minecraft:cooked_porkchop":  2,
    "minecraft:cooked_mutton":    2,
    "minecraft:cooked_chicken":   2,
    "minecraft:cooked_rabbit":    3,
    "minecraft:cooked_cod":       3,
    "minecraft:cooked_salmon":    3,
    "minecraft:bread":            2,
    "minecraft:pumpkin_pie":      3,
    "minecraft:rotten_flesh":     2,
    "minecraft:cobblestone":      1,
    "minecraft:stone":            1,
    "minecraft:cake":             4,
    "minecraft:melon_slice":      2,
    "minecraft:glow_berries":     2,
    "minecraft:sweet_berries":    2,
    "minecraft:poisonous_potato": 0,
    "minecraft:potion":           0
}
append item_tag ../food {"values": list(FOOD.keys())}

memo (''.join(FOOD.keys())):
    for id in FOOD:
        function ~/common/food_value/{id.split(":")[1]}:
            scoreboard players set #foodValue resourcelings.dummy FOOD[id]

function ~/common/feed:
    tag @s remove resourcelings.natural
    if score @s resourcelings.feed_cooldown matches 1.. return run function ~/fail:
        playsound minecraft:entity.villager.no neutral @a ~ ~ ~ 1 2
        execute return 0

    unless data storage resourcelings:temp food{used: "minecraft:potion"}:
        playsound entity.generic.eat neutral @a 
    if data storage resourcelings:temp food{used: "minecraft:potion"}:
        playsound entity.generic.drink neutral @a 

    $execute unless data storage resourcelings:temp food{used: "$(favorite)"} if data storage resourcelings:temp food{used: "minecraft:poisonous_potato"} run effect give @s poison 5 0 false

    $execute rotated ~ 0 run particle item $(used) ^ ^0.25 ^0.25 0.1 0.1 0.1 0 5 

    $execute unless data storage resourcelings:temp food{used: "$(favorite)"} run function resourcelings:entity/lings/common/food_value/$(used_id)
    $execute if data storage resourcelings:temp food{used: "$(favorite)"} run function resourcelings:entity/lings/common/feed/favorite
    function ~/favorite:
        scoreboard players set #foodValue resourcelings.dummy 7
        scoreboard players add @s resourcelings.happiness 2
        particle happy_villager ~ ~0.5 ~ 0.1 0.1 0.1 0 10

    scoreboard players operation @s resourcelings.hunger += #foodValue resourcelings.dummy
    
    if data storage resourcelings:temp food{used: "minecraft:potion"}:
        scoreboard players add @s resourcelings.thirst 4
    
    if score @s resourcelings.thirst matches 100..:
        scoreboard players set @s resourcelings.thirst 100

    if score @s resourcelings.hunger matches 100..:
        scoreboard players set @s resourcelings.hunger 100

    scoreboard players set @s resourcelings.feed_cooldown 30

    execute return 1

function ~/common/bundle:
    $execute if entity @s[tag=!resourcelings.big] run data modify storage resourcelings:temp resourceling_name set value '{"translate": "resourceling.$(tag)"}' 
    $execute if entity @s[tag=resourcelings.big] run data modify storage resourcelings:temp resourceling_name set value '{"translate": "text.resourcelings.big", "with": [{"translate": "resourceling.$(tag)"}]}' 
    
    # Set item name
    if data entity @s CustomName data modify storage resourcelings:temp item_name set from entity @s CustomName
    unless data entity @s CustomName data modify storage resourcelings:temp item_name set value '{"translate": "item.minecraft.bundle", "italic": false}'

    $data modify storage resourcelings:temp resourceling set value {spawnFunction: "$(spawnFunction)"}
    store success storage resourcelings:temp resourceling.big byte 1 if entity @s[tag=resourcelings.big]

    store result storage resourcelings:temp resourceling.happiness int 1 scoreboard players operation #happiness resourcelings.dummy = @s resourcelings.happiness
    store result storage resourcelings:temp resourceling.hunger int 1 scoreboard players operation #hunger resourcelings.dummy = @s resourcelings.hunger
    store result storage resourcelings:temp resourceling.thirst int 1 scoreboard players operation #thirst resourcelings.dummy = @s resourcelings.thirst


    tp @s ~ ~-1000 ~

function ~/tick:
    item replace entity @s weapon.mainhand from entity @s armor.head
    data modify entity @s[predicate=!resourcelings:entity/moving] HandItems[0].tag.CustomModelData set from entity @s ArmorItems[3].tag.resourcelings.models.idle
    data modify entity @s[predicate=resourcelings:entity/moving] HandItems[0].tag.CustomModelData set from entity @s ArmorItems[3].tag.resourcelings.models.walk

    if entity @s[nbt={HurtTime: 10s}] function ./on_hit:
        if predicate ../chance/lose_happiness_on_hit scoreboard players remove @s resourcelings.happiness 10
        particle angry_villager ~ ~0.5 ~ 0 0 0 0 1
        playsound minecraft:entity.villager.hurt neutral @a ~ ~ ~ 1 2
    
predicate ../chance/lose_happiness_on_hit {
    "condition": "minecraft:random_chance",
    "chance": 0.3
}

predicate ../chance/lose_hunger {
    "condition": "minecraft:random_chance",
    "chance": 0.03
}

predicate ../chance/lose_thirst {
    "condition": "minecraft:random_chance",
    "chance": 0.03
}

predicate ../chance/check_happiness {
    "condition": "minecraft:random_chance",
    "chance": 0.05  
}

predicate ../chance/shed/low_happiness {
    "condition": "minecraft:random_chance",
    "chance": 0.05
}

predicate ../chance/shed/med_happiness {
    "condition": "minecraft:random_chance",
    "chance": 0.15
}

predicate ../chance/shed/high_happiness {
    "condition": "minecraft:random_chance",
    "chance": 0.25
}

predicate ../chance/merge {
    "condition": "minecraft:random_chance",
    "chance": 0.5
}

function ~/second_clock:
    data modify entity @s HandItems[0].tag.fix_milk_bucket set value "ty mag"

    scoreboard players add @s[tag=resourcelings.natural] resourcelings.despawn_timer 1
    kill @s[scores={resourcelings.despawn_timer=f"{5 * 60}.."}]

function ~/5_second_clock:
    scoreboard players remove @s[scores={resourcelings.feed_cooldown=1..}] resourcelings.feed_cooldown 1
    scoreboard players remove @s[scores={resourcelings.shed_cooldown=1..}] resourcelings.shed_cooldown 1

    if entity @s[tag=resourcelings.natural] unless entity @p[distance=..128] return run kill @s
    unless entity @p[distance=..32] return 0

    if predicate ../chance/lose_hunger function ./lose_hunger:
        scoreboard players remove @s[tag=!resourcelings.big] resourcelings.hunger 3
        scoreboard players remove @s[tag=resourcelings.big] resourcelings.hunger 5

        if score @s resourcelings.hunger matches ..30 function ~/unhappy:
            function ./emote/hungry/spawn
            scoreboard players remove @s resourcelings.happiness 4

    if predicate ../chance/lose_thirst function ./lose_thirst:
        scoreboard players remove @s resourcelings.thirst 3

        if score @s resourcelings.thirst matches ..30 function ~/unhappy:
            function ./emote/thirsty/spawn
            scoreboard players remove @s resourcelings.happiness 4

    if score @s resourcelings.hunger matches ..10: 
        scoreboard players remove @s resourcelings.happiness 4
    if score @s resourcelings.thirst matches ..10:
        scoreboard players remove @s resourcelings.happiness 4

    data modify storage resourcelings:temp social set from entity @s ArmorItems[3].tag.resourcelings.social
    if predicate ../chance/check_happiness function ./check_happiness with storage resourcelings:temp social:
        scoreboard players operation #inital_happiness resourcelings.dummy = @s resourcelings.happiness
        
        store result score #num_resourcelings resourcelings.dummy if entity @e[type=wandering_trader,tag=resourcelings.entity,distance=0.001..8, limit=10]
        $execute if entity @e[type=wandering_trader,tag=resourcelings.entity,predicate=$(likes),distance=0.001..8,limit=1] run scoreboard players add @s resourcelings.happiness 2
        $execute if entity @e[type=wandering_trader,tag=resourcelings.entity,predicate=$(dislikes),distance=0.001..8,limit=1] run scoreboard players remove @s resourcelings.happiness 4

        if score #num_resourcelings resourcelings.dummy matches 0:
            scoreboard players remove @s resourcelings.happiness 1

        if score #num_resourcelings resourcelings.dummy matches 1:
            scoreboard players add @s resourcelings.happiness 2

        if score #num_resourcelings resourcelings.dummy matches 2..6:
            scoreboard players add @s resourcelings.happiness 4
        
        if score #num_resourcelings resourcelings.dummy matches 7..9:
            scoreboard players remove @s resourcelings.happiness 3

        if score #num_resourcelings resourcelings.dummy matches 10..:
            scoreboard players remove @s resourcelings.happiness 7


        if score @s resourcelings.happiness < #inital_happiness resourcelings.dummy:
            function ./emote/sad/spawn
        if score @s resourcelings.happiness > #inital_happiness resourcelings.dummy:
            unless score #inital_happiness resourcelings.dummy matches 100:
                function ./emote/happy/spawn

    if score @s resourcelings.happiness matches 101..:
        scoreboard players set @s resourcelings.happiness 100

    if score @s resourcelings.hunger matches ..0 function ./death/hunger:
        kill @s
        if data entity @s CustomName tellraw @a {"translate": "text.resourcelings.death.hunger", "with": [{"selector": "@s"}]}

    if score @s resourcelings.happiness matches ..0 function ./death/happiness:
        kill @s
        if data entity @s CustomName tellraw @a {"translate": "text.resourcelings.death.happiness", "with": [{"selector": "@s"}]}

    if score @s resourcelings.thirst matches ..0 function ./death/thirst:
        kill @s
        if data entity @s CustomName tellraw @a {"translate": "text.resourcelings.death.thirst", "with": [{"selector": "@s"}]}

function ~/10_second_clock:
    unless entity @p[distance=..32] return 1
    
    if entity @s[tag=!resourcelings.big] if score @s resourcelings.happiness matches 90.. function ~/handle_merge:
        unless predicate ../chance/merge return 0
        data modify storage resourcelings:temp resourceling set from entity @s ArmorItems[3].tag.resourcelings

        execute function ~/../find_partner with storage resourcelings:temp resourceling:
            scoreboard players set #partner resourcelings.dummy 0
            $execute store result score #partner resourcelings.dummy as @e[type=wandering_trader,tag=resourcelings.entity,tag=!resourcelings.big,tag=$(id),distance=0.001..2,scores={resourcelings.happiness=90..},limit=1] run tp @s ~ ~-1000 ~

            if score #partner resourcelings.dummy matches 1.. function ~/../make_big:
                store result score #idle resourcelings.dummy data get storage resourcelings:temp resourceling.models.idle
                store result score #walk resourcelings.dummy data get storage resourcelings:temp resourceling.models.walk

                scoreboard players add #idle resourcelings.dummy 2
                scoreboard players add #walk resourcelings.dummy 2

                store result storage resourcelings:temp resourceling.models.idle int 1 scoreboard players get #idle resourcelings.dummy
                store result storage resourcelings:temp resourceling.models.walk int 1 scoreboard players get #walk resourcelings.dummy

                data modify entity @s ArmorItems[3].tag.resourcelings set from storage resourcelings:temp resourceling

                tag @s add resourcelings.big

                playsound minecraft:block.respawn_anchor.deplete master @a ~ ~ ~ 1 2
                particle heart ~ ~0.75 ~ 0.5 0 0.5 0 5


    execute function ~/handle_shed:
        if score @s resourcelings.shed_cooldown matches 1.. return 1
        
        if score @s resourcelings.hunger matches ..15 return 0

        if score @s resourcelings.happiness matches ..30 unless predicate ../chance/shed/low_happiness return 0
        if score @s resourcelings.happiness matches 31..70 unless predicate ../chance/shed/med_happiness return 0
        if score @s resourcelings.happiness matches 71.. unless predicate ../chance/shed/high_happiness return 0

        data modify storage resourcelings:temp shed set from entity @s ArmorItems[3].tag.resourcelings.shed
        execute function ~/../shed with storage resourcelings:temp shed:
            $scoreboard players set @s resourcelings.shed_cooldown $(cooldown)
            if entity @s[tag=!resourcelings.big] store result score #count resourcelings.dummy random value 1..2
            if entity @s[tag=resourcelings.big] store result score #count resourcelings.dummy random value 3..5
            $loot spawn ~ ~ ~ loot $(loot_table)