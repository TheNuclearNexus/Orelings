from orelings:main import RESOURCELINGS, MECH_RESOURCELINGS

predicate ./spawn_oreling {
    "condition": "minecraft:random_chance",
    "chance": 0.05
}

append block_tag orelings:valid_nether_spawn {
    "values": [
        "minecraft:netherrack",
        "minecraft:crimson_nylium"
    ]
}

SPAWN_WEIGHTS = {
    'coal': 100,
    'iron': 85,
    'copper': 85,
    'gold': 70,
    'redstone': 65,
    'lapis_lazuli': 65,
    'emerald': 50,
    'diamond': 45
}

NETHER_SPAWN_WEIGHTS = {
    'quartz': 100,
    'debris': 10
}

MECH_SPAWN_WEIGHTS = {
    'tin': 85,
    'titanium': 45,
    'uranium': 30
}

def get_total_weight(dict):
    sum = 0
    for k in dict:
        sum += dict[k]
    return sum

append function orelings:load:
    scoreboard players set #total_spawn_weight orelings.dummy get_total_weight(SPAWN_WEIGHTS)

    if score #mech.ver.major load.status matches 0..:
        scoreboard players add #total_spawn_weight orelings.dummy get_total_weight(MECH_SPAWN_WEIGHTS)

def spawn_conditions(spawn_block):
    if entity @s[tag=smithed.entity] return 0
    unless block ~ ~-1 ~ spawn_block return 1
    unless predicate ./spawn_oreling return 2

    if data entity @s ArmorItems[0].id return 3
    if data entity @s ArmorItems[1].id return 4
    if data entity @s ArmorItems[2].id return 5
    if data entity @s ArmorItems[3].id return 6

def write_spawn_commands(weight, spawn_weights):
    for k in spawn_weights:
        if score #weight orelings.dummy matches f"{weight}..{(weight + spawn_weights[k] - 1)}":
            function f"orelings:entity/lings/{k}/spawn_natural"
        weight += spawn_weights[k]
    return weight

function ~/try_spawn_overworld:
    tag @s add orelings.checked

    spawn_conditions("stone")

    if data entity @s HandItems[0].id return 7
    if data entity @s HandItems[1].id return 8

    if data entity @s {IsBaby: 1b} return 9

    total_spawn_weight = get_total_weight(SPAWN_WEIGHTS)

    unless score #mech.ver.major load.status matches 0..:
        store result score #weight orelings.dummy random value (0, total_spawn_weight)

    if score #mech.ver.major load.status matches 0..:
        store result score #weight orelings.dummy random value (0, total_spawn_weight + get_total_weight(MECH_SPAWN_WEIGHTS))
    
    weight = write_spawn_commands(0, SPAWN_WEIGHTS)
    write_spawn_commands(weight, MECH_SPAWN_WEIGHTS)

    tp @s ~ ~-1000 ~

function ~/try_spawn_nether:
    tag @s add orelings.checked

    spawn_conditions("#orelings:valid_nether_spawn")

    if data entity @s {IsBaby: 1b} return 7

    total_spawn_weight = get_total_weight(NETHER_SPAWN_WEIGHTS)

    store result score #weight orelings.dummy random value (0, total_spawn_weight)

    weight = write_spawn_commands(0, NETHER_SPAWN_WEIGHTS)

    tp @s ~ ~-1000 ~
    return 100